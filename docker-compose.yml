version: "3"

volumes:
  irods_database:
    driver: local
  irods_config:
    driver: local
  irods_ssl:
    driver: local

services:
  database:
    image: postgres:9.1
    volumes:
      - irods_database:/var/lib/postgresql/data
      - ./etc/pgs_init.sh:/docker-entrypoint-initdb.d/setup-my-schema.sh:ro
    env_file:
      - ./env/db.env
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - internal

  icat:
    build:
      context: build
      dockerfile: Dockerfile.icat
    hostname: icat.local
    volumes:
      - irods_config:/var/lib/irods
      - irods_ssl:/var/lib/ssl
    depends_on:
      - database
    links:
      - database
    env_file:
      - ./env/db.env
      - ./env/irods.env
      - ./env/sram.env
    environment:
      IRODS_DB_HOST: database
      DATABASE_TYPE: "postgres"
      SESSION_MINUTES: 60
      SRAM_FLOW: TOKEN
    networks:
      - internal

  icommands:
    build:
      context: build
      dockerfile: Dockerfile.icommands
    hostname: irods-demo
    volumes:
      - irods_ssl:/var/lib/ssl
    links:
      - icat
    env_file:
      - ./env/irods.env
      - ./env/ldap.env
    ports:
      - "2222:22"
    environment:
      LOG_LEVEL: INFO
      IRODS_JSON: /etc/default/default_irods_environment.json
      IRODS_CERT: /var/lib/ssl/irods.crt
      IRODS_HOST: icat
      IRODS_PORT: ${IRODS_SERVICE_PORT:-1247}
      SSH_HOST: localhost
      SSH_PORT: 22
    networks:
      - internal

  davrods:
    build:
      context: build
      dockerfile: Dockerfile.davrods
    hostname: docker-davrods.local
    links:
      - icat
    env_file:
      - ./env/irods.env
    environment:
      IRODS_HOST: icat
      IRODS_PORT: ${IRODS_SERVICE_PORT:-1247}
      IRODS_SSL_VERIFY_SERVER: cert
      IRODS_SSL_CA_CERT: /var/lib/ssl/irods.crt
      IRODS_CLIENT_SERVER_POLICY: CS_NEG_REQUIRE
      VHOST_SERVER_NAME: docker-davrods.local
      VHOST_LOCATION: /
      VHOST_DAV_RODS_AUTH_SCHEME: PAM
      VHOST_DAV_RODS_EXPOSED_ROOT: User
    restart: always
    volumes:
      - irods_ssl:/var/lib/ssl
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.davrods.rule=Host(`davrods.${DOMAIN}`)"
      - "traefik.http.routers.davrods.tls=true"
      - "traefik.http.routers.davrods.tls.certresolver=le"
      - "traefik.http.routers.davrods.entrypoints=https"
      - "traefik.http.routers.davrods.service=davrods"
      - "traefik.http.routers.davrods.middlewares=restricted"
      - "traefik.http.services.davrods.loadbalancer.server.port=80"
    networks:
      - internal
      - external

networks:
  internal:
    external:
      name: localnet
  external:
    external:
      name: proxy