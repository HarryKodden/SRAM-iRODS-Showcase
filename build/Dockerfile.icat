# Stage 0: Build SRAM-PAM-OIDC module
FROM ubuntu:20.04
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y \
        git \
        gcc \
        g++ \
        cmake \
        libpam-dev \
        libcurl4-openssl-dev \
        libboost-dev \
        pamtester \
        rsyslog && \
    apt-get clean

WORKDIR /source
RUN git clone https://github.com/stefan-wolfsheimer/SRAM-PAM-OIDC.git
RUN mkdir SRAM-PAM-OIDC/build && \
    cd /source/SRAM-PAM-OIDC && \
    git submodule update --init --recursive && \
    mkdir /packages

RUN cd /source/SRAM-PAM-OIDC/build && \
    cmake .. && \
    make && \
    cpack

# ###########################################
# Stage 1: build plugin
FROM ubuntu:20.04

SHELL [ "/bin/bash", "-c" ]

ENV DEBIAN_FRONTEND=noninteractive

# Make sure we're starting with an up-to-date image
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get autoremove -y --purge && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/*
# To mark all installed packages as manually installed:
#apt-mark showauto | xargs -r apt-mark manual

RUN apt-get update && \
    apt-get install --no-install-recommends -y \
        apt-utils \
        build-essential \
        git \
        gnupg \
        libxml2-dev \
        lsb-release \
        python3 \
        python3-distro \
        python3-pip \
        python3-setuptools \
        sudo \
        wget \
    && \
    pip --no-cache-dir install --upgrade 'pip<21.0' && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/*

ENV python="python3"

RUN wget -qO - https://packages.irods.org/irods-signing-key.asc | apt-key add - && \
    echo "deb [arch=amd64] https://packages.irods.org/apt/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/renci-irods.list && \
    apt-get update

RUN apt install -y 'irods-externals*' irods-dev libpam-dev

WORKDIR /source
RUN git clone https://github.com/stefan-wolfsheimer/irods_auth_pam_interactive.git
RUN mkdir irods_auth_pam_interactive/build && \
    mkdir /packages

RUN cd /source/irods_auth_pam_interactive/build && \
    /opt/irods-externals/cmake3.21.4-0/bin/cmake .. && \
    make && \
    /opt/irods-externals/cmake3.21.4-0/bin/cpack && \
    cp irods_auth_interactive_pam-4.3.0-Linux.deb /packages

# ########################################
# main stage
FROM irods-runner-ubuntu20

ENV DEBIAN_FRONTEND=noninteractive
ENV TERM xterm-256color

RUN apt-get update
RUN apt-get install -y libfuse2
RUN apt-get install -y build-essential make ca-certificates git sudo
RUN apt-get install -y autoconf libpam-dev libcurl4-gnutls-dev libhiredis-dev libssl-dev
RUN apt-get install -y rsyslog gettext-base locales

RUN locale-gen en_US.UTF-8
RUN update-locale

# PREPARE SRAM-TOKEN-SERVICE
WORKDIR /opt
RUN git clone https://github.com/HarryKodden/SRAM-Token-Service.git
RUN cd SRAM-Token-Service && make && make install

# PREPARE IRODS SERVER
ADD packages /packages
COPY --from=0 /packages/sram-pam-oidc_0.0.1-1_amd64.deb /packages/sram-pam-oidc_0.0.1-1_amd64.deb
COPY --from=1 /packages/irods_auth_interactive_pam-4.3.0-Linux.deb /packages/irods_auth_interactive_pam-4.3.0-Linux.deb

RUN dpkg -i /packages/irods-runtime_4.3.0-1~focal_amd64.deb
RUN dpkg -i /packages/irods-server_4.3.0-1~focal_amd64.deb
RUN dpkg -i /packages/irods-database-plugin-postgres_4.3.0-1~focal_amd64.deb
RUN dpkg -i /packages/irods-icommands_4.3.0-1~focal_amd64.deb
RUN dpkg -i /packages/sram-pam-oidc_0.0.1-1_amd64.deb
RUN dpkg -i /packages/irods_auth_interactive_pam-4.3.0-Linux.deb

VOLUME /var/lib/irods
VOLUME /var/lib/ssl

ADD genresp.sh /usr/local/bin/genresp.sh
ADD icat.sh /usr/local/bin/icat.sh

RUN chmod a+x /usr/local/bin/*.sh

ENTRYPOINT ["/usr/local/bin/icat.sh", "/keep_alive.sh" ]
